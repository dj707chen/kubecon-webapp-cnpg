apiVersion: v1
kind: Service
metadata:
  name: mywebapp
spec:
  selector:
    app: mywebapp
  ports:
  - protocol: "TCP"
    port: 8088
    targetPort: 5000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mywebapp
spec:
  selector:
    matchLabels:
      app: mywebapp
  replicas: 4
  template:
    metadata:
      labels:
        app: mywebapp
    spec:
      containers:
      - name: mywebapp
        image: myapp
        imagePullPolicy: Never
        ports:
        - containerPort: 5000
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: cluster-example-app
              key: password
        - name: USER
          valueFrom:
            secretKeyRef:
              name: cluster-example-app
              key: username
        - name: DATABASE_URL
          value: "postgres://$(USER):$(PASSWORD)@cluster-example-app-rw/app?sslmode=require&connect_timeout=2"
        # - name: SQL_QUERY
        #   value: "insert into tps.tl(source) values ('hey');"
